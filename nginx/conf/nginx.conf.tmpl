
worker_processes  10;
error_log  [[$SiteDefs::ENSEMBL_NGINX_RUNDIR]]/nginx.error.log error;
pid        [[$SiteDefs::ENSEMBL_NGINX_RUNDIR]]/nginx.pid;
worker_rlimit_nofile 8192;

events {
  worker_connections  4096;
}

http {
  include               [[$SiteDefs::ENSEMBL_NGINX_ROOT]]/conf/mime.types;

  client_body_temp_path [[$SiteDefs::ENSEMBL_NGINX_RUNDIR]]/client_body_temp;
  proxy_temp_path       [[$SiteDefs::ENSEMBL_NGINX_RUNDIR]]/proxy_temp;
  fastcgi_temp_path     [[$SiteDefs::ENSEMBL_NGINX_RUNDIR]]/fastcgi_temp;
  uwsgi_temp_path       [[$SiteDefs::ENSEMBL_NGINX_RUNDIR]]/uwsgi_temp;
  scgi_temp_path        [[$SiteDefs::ENSEMBL_NGINX_RUNDIR]]/scgi_temp;

  default_type application/octet-stream;
  log_format   main '$remote_addr - $remote_user [$time_local]  $status "$request" $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';
  access_log   [[$SiteDefs::ENSEMBL_NGINX_RUNDIR]]/nginx.access.log main;
  sendfile     on;
  tcp_nopush   on;
  #server_names_hash_bucket_size 128; # this seems to be required for some vhosts

  upstream memcached_servers {
    [[ join( "\n    ", (map { "server $_;" } @{ $SiteDefs::ENSEMBL_MEMCACHED->{servers} || [] })) ]]

    hash "nginx-$md5_request_uri";
  }

  server {
    listen          [[$SiteDefs::ENSEMBL_NGINX_PORT || 8000]];
    server_name     [[$SiteDefs::ENSEMBL_STATIC_SERVERNAME]];

    #proxy_pass_request_headers on;
    #proxy_pass_request_body on;
    proxy_pass_header Server;
    proxy_pass_header Expires;
    proxy_pass_header X-MEMCACHED;
    proxy_pass_header X-MACHINE;
    add_header X-NGINX-MACHINE [[$SiteDefs::ENSEMBL_SERVER]];

    #enable for EC2
    [[ ($SiteDefs::ENSEMBL_NGINX_EC2 and not $SiteDefs::ENSEMBL_NGINX_EC2TEST)? '' : '#' ]] proxy_set_header X-Forwarded-Host [[$SiteDefs::ENSEMBL_SERVERNAME]];

    gzip on;
    gzip_comp_level 4;
    gzip_min_length 1100;
    gzip_proxied any;
    gzip_types text/plain text/xml text/javascript text/css application/x-javascript;

    large_client_header_buffers 4 16k;
    client_max_body_size 100M;
    memcached_connect_timeout 50;
    memcached_read_timeout 50;
    memcached_send_timeout 50;
    error_page   502 503 /errors;

    location ~* \.(jpg|jpeg|png|gif|js|css|txt|xml|csv|gff|fa|nh|gz|tar|zip|pdf|swf|jar|ico|htm)$ {
      expires 30d;
      set_md5 $md5_request_uri "[[$SiteDefs::ENSEMBL_STATIC_BASE_URL]]$request_uri";
      set $memcached_key "nginx-$md5_request_uri";
      memcached_pass memcached_servers;
      error_page 404 502 = @fetch;
    }

    location @fetch {
      internal;
      access_log   off;
      proxy_pass [["$SiteDefs::ENSEMBL_PROTOCOL://$SiteDefs::ENSEMBL_SERVER:$SiteDefs::ENSEMBL_PORT"]];
      break;
    }

    location / {
      proxy_read_timeout 300;
      proxy_pass      [["$SiteDefs::ENSEMBL_PROTOCOL://$SiteDefs::ENSEMBL_SERVER:$SiteDefs::ENSEMBL_PORT"]];
    }

    location /errors {
     [[ $SiteDefs::ENSEMBL_NGINX_EC2? '#' : '' ]]proxy_pass      [[$SiteDefs::ENSEMBL_BASE_URL]]/errors/ensembl.html;
     [[ $SiteDefs::ENSEMBL_NGINX_EC2? '' : '#' ]]root /ensemblweb/www/server/ebi-plugins/amazonEC2/htdocs;
    }

  }
}
